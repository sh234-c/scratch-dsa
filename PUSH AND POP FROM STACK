#include <stdio.h>
#include <stdlib.h>//as we uses the malloc function
struct stack{
    int size;
    int top;//as the topmost element in stack
    int*arr;
};
int isFull(struct stack*ptr){
    if(ptr->top==ptr->size-1){
        return 1;
    }
    else{
        return 0;
    }
    
}
int isEmpty(struct stack*ptr){
    if(ptr->top==-1){
        return 1;
    }
    else{
        return 0;
    }
    
}
void push(struct stack*ptr,int val){
    if(isFull(ptr)){
        printf("stack overflow\n");
        
    }
    else{
        ptr->top++;
        ptr->arr[ptr->top]=val;
        
    }
}
int pop(struct stack*ptr){
    if(isEmpty(ptr)){
        printf("stack underflow\n");
        return -1;
        
    }
    else{
        int val=ptr->arr[ptr->top];
        ptr->top--;
        return val;
     
        
    }
}
int main(){
    struct stack*s=(struct stack*)malloc(sizeof(struct stack));
    s->size=5;
    s->top=-1;
        s->arr=(int *)malloc(s->size*sizeof(int));
        printf("stack has been created successfully\n");
        printf("%d\n",isFull(s));
        printf("%d\n",isEmpty(s));
        push(s,56);
            push(s,56);
                push(s,56);
                    push(s,56);
                        push(s,9);
           printf("%d\n",isFull(s));
        printf("%d\n",isEmpty(s));
        
        printf("popped %d from stack\n",pop(s));
        return 0;
        
    
}
