// QUEUE USING ARRAYS IN DATA STRUCTURE
#include <stdio.h>
#include <stdlib.h>

struct queue{
    int size;
    int front;
    int rear;
    int*arr;
};
//now for inserting element in the queue
int isEmpty(struct queue*q){
    if(q->rear==q->front){
        return 1;
    }
    else{
        return 0;
    }
}
int isFull(struct queue*q){
    if(q->rear==q->size-1){
        return 1;
    }
    else{
        return 0;
    }
}

void enqueue(struct queue*q,int val){
    if(isFull(q)){
        printf("this queue is full");
    }
    else{
        q->rear++;//as it was placed at 0th index
        q->arr[q->rear]=val;
    }
}
int dequeue(struct queue*q){
    int a=-1;//not dequeue
    if(isEmpty(q)){
        printf("queue is empty");
    }
    else{
        q->front++;
        a=q->arr[q->front];
        return a;
    }
}


int main(){
    struct queue q;
    q.size=5;
    q.front=q.rear=-1;
    q.arr=(int*)malloc(q.size*sizeof(int));
    //enqueue few element int the queue
    enqueue(&q,12);
     enqueue(&q,13);
    
        printf("dequeuing element %d\n",dequeue(&q));
          printf("dequeuing element %d\n",dequeue(&q));
          
        
        if(isEmpty(&q)){
            printf("queue is empty\n");
        }
        
         if(isFull(&q)){
            printf("queue is full\n");
        }
    return 0;
}
